{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nvar redis = require('redis');\n\nvar _require = require('util'),\n    promisify = _require.promisify;\n\nvar client = redis.createClient();\nvar hgetAsync = promisify(client.hget).bind(client);\nvar getAsync = promisify(client.get).bind(client);\n\nfunction readCache(_x, _x2) {\n  return _readCache.apply(this, arguments);\n}\n\nfunction _readCache() {\n  _readCache = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(key, field) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return hgetAsync(key, field);\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            throw new Error(_context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 6]]);\n  }));\n  return _readCache.apply(this, arguments);\n}\n\nfunction writeCache(_x3, _x4, _x5) {\n  return _writeCache.apply(this, arguments);\n}\n\nfunction _writeCache() {\n  _writeCache = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(key, field, value) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return client.hset(key, field, value);\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            throw new Error('缓存写入数据失败');\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 5]]);\n  }));\n  return _writeCache.apply(this, arguments);\n}\n\nexports.read = readCache;\nexports.write = writeCache;","map":null,"metadata":{},"sourceType":"module"}