{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs2/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\"));\n\nvar login = require('../service/LoginService').LoginService;\n\nvar fetchClassroom = require('../service/ClassroomService').ClassroomService;\n\nvar hold = require('../../util/sleep').hold;\n\nfunction fetchEmptyClassroom() {\n  return _fetchEmptyClassroom.apply(this, arguments);\n}\n\nfunction _fetchEmptyClassroom() {\n  _fetchEmptyClassroom = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  _regenerator.default.mark(function _callee() {\n    var date, data, afternoon, night, userId, res, cookie;\n    return _regenerator.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            date = new Date();\n            date = \"\".concat(date.getFullYear(), \"-\").concat(date.getMonth() + 1 > 9 ? date.getMonth() + 1 : '0' + (date.getMonth() + 1), \"-\").concat(date.getDate() > 9 ? date.getDate() : '0' + date.getDate());\n            data = {\n              cycleTime: {\n                dateBegin: date,\n                dateEnd: date,\n                cycleCount: 1,\n                cycleType: 1,\n                roomApplyTimeType: 0\n              },\n              timeBegin: '14:00',\n              timeEnd: '18:00'\n            };\n            userId = 107242016000003;\n            _context.next = 6;\n            return login(userId, userId);\n\n          case 6:\n            res = _context.sent;\n            cookie = res.data.cookie;\n            hold(400);\n            _context.next = 11;\n            return fetchClassroom(data, userId, cookie);\n\n          case 11:\n            afternoon = _context.sent;\n            data.timeBegin = '18:30';\n            data.timeEnd = '22:30';\n            hold(400);\n            _context.next = 17;\n            return fetchClassroom(data, userId, cookie);\n\n          case 17:\n            night = _context.sent;\n            return _context.abrupt(\"return\", {\n              afternoonItems: afternoon.data.items,\n              nightItems: night.data.items,\n              date: date\n            });\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchEmptyClassroom.apply(this, arguments);\n}\n\nmodule.exports = fetchEmptyClassroom;","map":null,"metadata":{},"sourceType":"script"}