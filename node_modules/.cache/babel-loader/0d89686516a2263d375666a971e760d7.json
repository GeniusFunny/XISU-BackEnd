{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nvar query = require('../../util/query');\n\nvar sql = {\n  register: \"\\n    INSERT INTO user(id, password, cookie)\\n      VALUES(?, ?, ?)\\n  \",\n  update: \"\\n    UPDATE user SET password=?, cookie=?\\n    WHERE id=?\\n  \",\n  find: \"\\n    SELECT * from user\\n    WHERE id=?\\n  \",\n  all: \"\\n    SELECT id, password FROM user\\n  \"\n};\n\nfunction register(_x, _x2, _x3) {\n  return _register.apply(this, arguments);\n}\n\nfunction _register() {\n  _register = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(id, password, cookie) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return query(sql.register, [id, password, cookie]);\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            throw new Error('已经注册');\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 6]]);\n  }));\n  return _register.apply(this, arguments);\n}\n\nfunction find(_x4) {\n  return _find.apply(this, arguments);\n}\n\nfunction _find() {\n  _find = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(id) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return query(sql.find, [id]);\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _find.apply(this, arguments);\n}\n\nfunction update(_x5, _x6, _x7) {\n  return _update.apply(this, arguments);\n}\n\nfunction _update() {\n  _update = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(password, cookie, id) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return query(sql.update, [password, cookie, id]);\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _update.apply(this, arguments);\n}\n\nfunction login(_x8, _x9, _x10) {\n  return _login.apply(this, arguments);\n}\n\nfunction _login() {\n  _login = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(id, password, cookie) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return find(id);\n\n          case 2:\n            data = _context4.sent;\n\n            if (!data.length) {\n              _context4.next = 8;\n              break;\n            }\n\n            _context4.next = 6;\n            return update(password, cookie, id);\n\n          case 6:\n            _context4.next = 10;\n            break;\n\n          case 8:\n            _context4.next = 10;\n            return register(id, password, cookie);\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _login.apply(this, arguments);\n}\n\nfunction userList() {\n  return _userList.apply(this, arguments);\n}\n\nfunction _userList() {\n  _userList = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5() {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return query(sql.all);\n\n          case 2:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _userList.apply(this, arguments);\n}\n\nexports.login = login;\nexports.userList = userList;","map":null,"metadata":{},"sourceType":"module"}